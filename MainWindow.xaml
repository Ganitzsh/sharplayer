<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:MediaPlayer"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="MediaPlayer.MainWindow"
        Title="Sharplayer" Height="36" Width="213" MinWidth="700" MinHeight="450" FontFamily="FontAw" Background="Black">
    <Window.Resources>

        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="0" BorderBrush="Black" Background="#FF303030" Height="4"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="#FFC19BEB"  BorderThickness="0" BorderBrush="YellowGreen" Height="4"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Height="12" Width="12" Fill="#FFDFE1E5" Margin="-2,0,0,0"></Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MyCustomStyleForSlider" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                                <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                                <Border x:Name="TrackBackground"  
 BorderThickness="1" CornerRadius="1"
 Margin="5,0" VerticalAlignment="Center" Height="4.0" Grid.Row="1" >
                                    <Canvas Margin="-6,-1">
                                        <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"
 Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
 Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
 StrokeThickness="1.0"/>
                                    </Canvas>
                                </Border>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="Black"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                                        Value="False" />
                                    <Condition Property="IsSelected"
                                                        Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                                TargetName="Bd"
                                                Value="#FFC19BEB" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                                        Value="True" />
                                    <Condition Property="IsSelected"
                                                        Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                                TargetName="Bd"
                                                Value="#FFC19BEB" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PlayListListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Padding" Value="6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                                        Value="False" />
                                    <Condition Property="IsSelected"
                                                        Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                                TargetName="Bd"
                                                Value="#FFC19BEB" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                                        Value="True" />
                                    <Condition Property="IsSelected"
                                                        Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                                TargetName="Bd"
                                                Value="#FFC19BEB" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Window.Resources>
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <Grid Margin="0">

        <Grid Margin="0" Panel.ZIndex="99"/>

        <Grid x:Name="WindowGrid" Margin="0,0,0,44">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150" MinWidth="150"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>



            <Grid x:Name="SidebarGrid" Grid.Column="0">
                <ListBox ItemsSource="{ Binding PlayLists}" Foreground="#FFDFE1E5" BorderBrush="{x:Null}" BorderThickness="0" Padding="5,0,0,0" Margin="0,99,0,0.5">
                    <ListBox.Background>
                        <SolidColorBrush Color="#FF161616" Opacity="1"/>
                    </ListBox.Background>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="11" Margin="0,2,0,0" Width="12" Height="12"><Run Text="{ Binding Icon}"/></TextBlock>
                                <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Language="fr-fr" Text="{ Binding Name }"/></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <ListBox Foreground="#FFDFE1E5" BorderBrush="{x:Null}" BorderThickness="0" Padding="5,0,0,0" Height="99" VerticalAlignment="Top">
                    <ListBox.Background>
                        <SolidColorBrush Color="#FF161616" Opacity="1"/>
                    </ListBox.Background>

                    <ListBoxItem Margin="0,10">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontFamily="Arial" Padding="0" FontWeight="SemiBold" Foreground="#FFC19BEB"><Run Language="fr-fr" Text="COMPUTER"/></TextBlock>
                        </StackPanel>
                    </ListBoxItem>

                    <ListBoxItem>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding writeStuff}" CommandParameter="ComputerMusic"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="11" Margin="0,2,0,0" Text="&#xF001;" Width="12" Height="12"/>
                            <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Language="fr-fr" Text="Music"/></TextBlock>
                        </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding displayImageTab}" CommandParameter="ComputerPhoto"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="11" Margin="0,2,0,0" Width="12" Height="12"><Run Text="&#xF030;"/></TextBlock>
                            <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Text="Photo"/></TextBlock>
                        </StackPanel>
                    </ListBoxItem>


                    <ListBoxItem>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction Command="{Binding displayVideoTab}" CommandParameter=""/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontFamily="FontAwesome" FontSize="11" Margin="0,2,0,0" Height="12" Width="12"><Run Text="&#xF008;"/></TextBlock>
                            <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Text="Video"/></TextBlock>
                        </StackPanel>
                    </ListBoxItem>

                </ListBox>
                <ListBox Name="playlistListBox" ItemsSource="{Binding PlayLists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#FFDFE1E5" SelectedIndex="{Binding SelectedPlaylist,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderBrush="#FF303030" BorderThickness="0,0,0,1" Padding="5,0,0,0" Margin="0,99,0,41.5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <i:InvokeCommandAction  Command="{Binding playlistClicked}" 
        									CommandParameter="{Binding SelectedPlaylist, ElementName=playlistListBox}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.Background>
                        <SolidColorBrush Color="#FF161616" Opacity="1"/>
                    </ListBox.Background>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="11" Margin="0,2,0,0" Width="12" Height="12"><Run Text="{Binding Icon}"/></TextBlock>
                                <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Rename" Command="{Binding renameSelectedPlaylist}"/>
                            <MenuItem Header="Delete" Command="{Binding deleteSelectedPlaylist}"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
               
                <RepeatButton x:Name="addPlaylistButton" Command="{Binding fastCommand}" Content="&#xF196;" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="#FFDFE1E5" BorderThickness="0" Margin="0,0,10,8" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="20" BorderBrush="{x:Null}" Panel.ZIndex="99">
                    <RepeatButton.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </RepeatButton.Background>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseDown">
                            <ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=addPlaylistButton}" PropertyName="PlacementTarget" Value="{Binding ElementName=addPlaylistButton, Mode=OneWay}"/>
                            <ei:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=addPlaylistButton}" PropertyName="IsOpen" Value="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <RepeatButton.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding addMusicPlaylist}" Header="Add music playlist" />
                            <MenuItem Command="{Binding addVideoPlaylist}" Header="Add video playlist" />
                            <MenuItem Command="{Binding addImagePlaylist}" Header="Add image playlist" />
                        </ContextMenu>
                    </RepeatButton.ContextMenu>
                </RepeatButton>
                <TextBlock TextWrapping="Wrap" Margin="0,0,35,12.6" Foreground="#FFC19BEB" HorizontalAlignment="Right" Width="74.46" Height="14.4" VerticalAlignment="Bottom"><Run Language="fr-fr" Text="Add a playlist"/></TextBlock>
            </Grid>
            <GridSplitter HorizontalAlignment="Right" 
        						VerticalAlignment="Stretch" 
        						Grid.Column="1" ResizeBehavior="PreviousAndNext"
        						Width="1" Background="#FF303030"/>

            <Grid x:Name="ContentGrid" ClipToBounds="True" Background="Black" Margin="0,0,0,0.5" Grid.Column="2">
                <TabControl BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" Padding="0" x:Name="MainTabControl" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,-25,0,0">
                    <TabItem Header="Playlist" BorderBrush="{x:Null}" Margin="-1.5,-2,0,0.5" IsSelected="{Binding DisplayXamlTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="52" Height="22" VerticalAlignment="Bottom">
                        <Grid Background="Black">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>


                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Foreground="#FFC19BEB" Panel.ZIndex="90" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" Margin="9,8.176,0,0" Width="15.143" FontSize="13.333" Height="18.824" VerticalAlignment="Top"><Span><Run Text="&#xF002;"/></Span></TextBlock>


                            <TextBox x:Name="musicSearchTextBox" TextWrapping="Wrap" Grid.Row="0" Grid.ColumnSpan="5" Background="Black" BorderBrush="#FF303030" BorderThickness="0,0,0,1" Foreground="#FFDFE1E5" Padding="28,8,8,8">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextChanged">
                                        <i:InvokeCommandAction Command="{ Binding writeStuff }" CommandParameter="Lol"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>

                            <TextBlock x:Name="searchTextBlox" IsHitTestVisible="False"  TextAlignment="Left" Grid.ColumnSpan="3" Padding="5, 5, 5, 5"  Foreground="LightGray" Panel.ZIndex="99" Margin="25.143,3,128.19,4">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=musicSearchTextBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsFocused, ElementName=musicSearchTextBox}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style><Run Language="fr-fr" Text="Search an Artist, an Album or a Track"/></TextBlock>

                            <ListBox Grid.Column="0" Grid.Row="1" x:Name="artistsListView" ItemsSource="{Binding ArtistsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedArtist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Black" Foreground="#FFDFE1E5" BorderBrush="{x:Null}" BorderThickness="0"  UseLayoutRounding="False" Padding="-2" ItemContainerStyle="{DynamicResource PlayListListBoxItem}" >

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction  Command="{Binding artistSelected}" 
        									CommandParameter="{Binding SelectedItem, ElementName=artistsListView}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>




                            </ListBox>
                            <GridSplitter HorizontalAlignment="Right" 
        						VerticalAlignment="Stretch" 
        						Grid.Column="1" Grid.Row="1" ResizeBehavior="PreviousAndNext"
        						Width="1" Background="#FF303030"/>

                            <ListBox Grid.Column="2" Grid.Row="1" x:Name="albumsListView" ItemsSource="{Binding AlbumsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedAlbum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="#FFDFE1E5" Background="Black" BorderBrush="{x:Null}" BorderThickness="0" Padding="-2" ItemContainerStyle="{DynamicResource PlayListListBoxItem}" >

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction  Command="{Binding albumSelected}" 
        									CommandParameter="{Binding SelectedItem, ElementName=albumsListView}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>




                            </ListBox>
                            <GridSplitter HorizontalAlignment="Right" 
        						VerticalAlignment="Stretch" 
        						Grid.Column="3" Grid.Row="1" ResizeBehavior="PreviousAndNext"
        						Width="1" Background="#FF303030"/>


                            <ListBox x:Name="titleListView" Grid.Column="4" Grid.Row="1" ItemsSource="{Binding TrackList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Black" Foreground="#FFDFE1E5" BorderBrush="{x:Null}" BorderThickness="0" Padding="-2" ItemContainerStyle="{DynamicResource PlayListListBoxItem}" >
                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add to"  ItemsSource="{Binding MusicPlayList}" Command="{ Binding Path=addMusicToPlaylist }"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}">
                                            <MenuItem.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Text="{Binding Name}"/></TextBlock>
                                                </DataTemplate>
                                            </MenuItem.ItemTemplate>
                                        </MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction  Command="{Binding trackSelected}" 
        									CommandParameter="{Binding SelectedIndex, ElementName=titleListView}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>




                            </ListBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Video Playing" BorderBrush="{x:Null}" Height="20.4" VerticalAlignment="Bottom" Margin="-2,0,-2,-1" >
                        <Grid Background="Black" Margin="0,0,0,0.5">
                            <ContentControl Content="{Binding MyMediaElement}" Foreground="Red" Background="Black" Panel.ZIndex="90"/>
                            <TextBlock x:Name="musicIcon" Margin="212,131.75" TextWrapping="Wrap" Foreground="#FFC19BEB" FontSize="96" FontFamily="FontAwesome" TextAlignment="Center" LineHeight="29.333"><Span><Run Text="&#xF008;"/></Span></TextBlock>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Images" BorderBrush="{x:Null}" Height="20.4" VerticalAlignment="Bottom" Margin="-2,0" >
                        <Grid Background="Black" Margin="0,0,0,0.5">
                            <ListBox Grid.Column="0" x:Name="imageListView" ItemsSource="{Binding ImagesList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedImage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Black" Foreground="#FFDFE1E5" BorderBrush="{x:Null}" BorderThickness="0"  UseLayoutRounding="False" Padding="-2" ItemContainerStyle="{DynamicResource PlayListListBoxItem}" >

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction  Command="{Binding imageClicked}" 
                    						CommandParameter="{Binding SelectedItem, ElementName=imageListView}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>




                            </ListBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Videos" BorderBrush="{x:Null}" Height="20.4" VerticalAlignment="Bottom" Margin="-2,0" >
                        
                        <Grid Background="Black" Margin="0,0,0,0.5">
                            <ListBox Grid.Column="0" x:Name="videoListView" ItemsSource="{Binding VideosList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Black" Foreground="#FFDFE1E5" BorderBrush="{x:Null}" BorderThickness="0"  UseLayoutRounding="False" Padding="-2" ItemContainerStyle="{DynamicResource PlayListListBoxItem}" >

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction  Command="{Binding videoClicked}" 
                    						CommandParameter="{Binding SelectedItem, ElementName=videoListView}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>




                            </ListBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Music playing" BorderBrush="{x:Null}" Margin="-2.5,3,-2,-1" >
                        <Grid Background="Black" Margin="0,0,0,0.5">
                            <ContentControl Content="{Binding MyMediaElement}" Foreground="Red" Background="Black" Panel.ZIndex="90"/>
                            <TextBlock x:Name="artist" Margin="0,0,10,9.5" TextWrapping="Wrap" TextAlignment="Right" FontSize="16" Foreground="#FFDFE1E5" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="524"><Run Language="fr-fr" Text="{Binding NowPlayingArtist, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/></TextBlock>
                            <TextBlock x:Name="title" Margin="0,0,10,29.5" TextWrapping="Wrap" TextAlignment="Right" FontSize="18.667" FontWeight="SemiBold" Foreground="#FFC19BEB" Height="22" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="524"><Run Language="fr-fr" Text="{Binding NowPlayingTitle, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/></TextBlock>

                            <TextBlock x:Name="musicIcon1" Margin="212,131.75" TextWrapping="Wrap" Foreground="#FFC19BEB" FontSize="96" FontFamily="FontAwesome" TextAlignment="Center" LineHeight="29.333"><Span><Run Text="&#xF001;"/></Span></TextBlock>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Playlist" BorderBrush="{x:Null}" Height="20.4" VerticalAlignment="Bottom" Margin="-2,0" >
                        <Grid Background="Black" Margin="0,0,0,0.5">
                            <ListBox Grid.Column="0" x:Name="playlistElementView" ItemsSource="{Binding CurrentPlaylist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding SelectedPlaylistElem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Black" Foreground="#FFDFE1E5" BorderBrush="{x:Null}" BorderThickness="0"  UseLayoutRounding="False" Padding="-2" ItemContainerStyle="{DynamicResource PlayListListBoxItem}" >

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction  Command="{Binding playlistElementClicked}" 
                    						CommandParameter="{Binding SelectedItem, ElementName=playlistElementView}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Language="fr-fr" Text="{ Binding TrackName }"/></TextBlock>
                                            <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Language="fr-fr" Text="{ Binding Artist }"/></TextBlock>
                                            <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Language="fr-fr" Text="{ Binding Album }"/></TextBlock>
                                            <TextBlock FontFamily="Arial" Padding="10,0,0,0"><Run Language="fr-fr" Text="{ Binding Year }"/></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>




                            </ListBox>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
        </Grid>
        <Slider x:Name="progressSlider" IsMoveToPointEnabled="true"  Margin="0,0,0,31.5" Minimum="0" Maximum="{Binding SliderMaxValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="{x:Null}"  Style="{StaticResource Horizontal_Slider}" Value="{Binding SliderValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Panel.ZIndex="99" Height="21" VerticalAlignment="Bottom"/>
        <Border x:Name="BotomBarBorder" BorderBrush="#FF303030" BorderThickness="0,1,0,0" Background="#FF161616" Height="40" VerticalAlignment="Bottom">
            <Grid x:Name="BotomBarGrid" Margin="0,-1,0,0" >
                <Grid.Background>
                    <SolidColorBrush Color="Black" Opacity="0"/>
                </Grid.Background>
                <RepeatButton x:Name="backwardButton" Command="{Binding reverseCommand}" Content="&#xF04A;" HorizontalAlignment="Left" Width="42" FontFamily="FontAwesome" FontSize="16" Foreground="#FFDFE1E5" BorderThickness="0" Margin="52,6.832,0,3.167" Height="30" BorderBrush="{x:Null}">
                    <RepeatButton.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </RepeatButton.Background>
                </RepeatButton>
                <Button x:Name="playButton" Command="{Binding playCommand}" Content="{Binding PlayIcon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="42" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="#FFC19BEB" BorderThickness="0" Margin="94,6.832,0,3.167" Height="30" BorderBrush="{x:Null}">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                </Button>
                <Button x:Name="stopButton" Command="{Binding stopCommand}" Content="&#xF04D;" HorizontalAlignment="Left" Width="42" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="#FFDFE1E5" BorderThickness="0" Margin="137,6.832,0,3.167" Height="30" BorderBrush="{x:Null}">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                </Button>
                <RepeatButton x:Name="forwardButton" Command="{Binding fastCommand}" Content="&#xF04E;" HorizontalAlignment="Left" Width="42" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="#FFDFE1E5" BorderThickness="0" Margin="179,6.832,0,3.167" Height="30" BorderBrush="{x:Null}">
                    <RepeatButton.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </RepeatButton.Background>
                </RepeatButton>
                <Button x:Name="Repeat" Command="{Binding repeatCommand}" Content="&#xF01E;" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="{Binding RepeatColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Margin="0,0,188.998,3.167" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="25">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                </Button>
                <Button x:Name="Shuffle" Command="{Binding shuffleCommand}" Content="&#xF074;" HorizontalAlignment="Right" Width="25" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="#FFDFE1E5" BorderThickness="0" Margin="0,0,158.998,3.168" RenderTransformOrigin="-0.54,0.539" Height="30" VerticalAlignment="Bottom">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                </Button>
                <TextBlock x:Name="volumeIcon" Margin="0,0,121.37,11.697" TextWrapping="Wrap" Foreground="#FFDFE1E5" RenderTransformOrigin="1.673,0.443" FontSize="13.333" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" Text="&#xF028;" Height="13.444" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="12.38"/>
                <Slider x:Name="volumeSlider" IsMoveToPointEnabled="true"  Margin="0,0,10,9" Minimum="0" Foreground="{x:Null}"  Style="{StaticResource Horizontal_Slider}" Panel.ZIndex="99" Height="21" VerticalAlignment="Bottom" Maximum="1" Value="{Binding VolumeValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Width="60"/>
                <Button x:Name="previousButton" Command="{Binding prevCommand}" Content="&#xF049;" HorizontalAlignment="Left" Width="42" FontFamily="FontAwesome" FontSize="16" Foreground="#FFDFE1E5" BorderThickness="0" Margin="10,6.833,0,3.167" Height="30" BorderBrush="{x:Null}" RenderTransformOrigin="1.845,0.206">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                </Button>
                <Button x:Name="nextButton" Command="{Binding nextCommand}" Content="&#xF050;" HorizontalAlignment="Left" Width="42" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="#FFDFE1E5" BorderThickness="0" Margin="221,6.832,0,3.167" Height="30" BorderBrush="{x:Null}">
                    <Button.Background>
                        <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                    </Button.Background>
                </Button>
                <Button x:Name="URL" Command="{Binding urlCommand}" Content="&#xf0ac;" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="{Binding RepeatColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Margin="0,0,218.998,3.167" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="25">
                	<Button.Background>
                		<SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                	</Button.Background>
                </Button>
                <Button x:Name="x2" Command="{Binding speedCommand}" Content="x2" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="{Binding RepeatColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Margin="0,0,248.998,3.167" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="25">
                	<Button.Background>
                		<SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                	</Button.Background>
                </Button>
                <Button x:Name="x0_5" Command="{Binding slowCommand}" Content="x0.5" FontFamily="/MediaPlayer;component/Fonts/#FontAwesome" FontSize="16" Foreground="{Binding RepeatColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Margin="0,0,278.998,3.167" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="32.333">
                	<Button.Background>
                		<SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                	</Button.Background>
                </Button>
            </Grid>
        </Border>

    </Grid>
</Window>
